(function(g){var f={baseAspect:function(){}};f.baseAspect.prototype={mainFunctionContext:void 0,addRunner:function(a){this.runner=a},addAspectCallback:function(a){this.aspectCallback=a},addAspectParams:function(a){this.aspectParams=a},addAspectArgsMap:function(a){this.aspectArgsMap=a},getAspectParams:function(){return this.aspectParams},getAspectCallback:function(){return this.aspectCallback},getAspectArgsMap:function(){return this.aspectArgsMap},run:function(){var a=this.getAspectArgsMap(),a=this._argumentMapping(arguments,
    a);this.runNext=function(){this.context.getAspectCallback();this.context.getAspectCallback().apply(this.context.mainFunctionContext,this.args)}.bind({context:this,args:arguments});this.runner.apply(this,a)},_argumentMapping:function(a,d){var e=[];if("function"===typeof d)e=d(a);else if(d)for(var b=0,c=d.length;c--;)e.push(a[d[b]-1]),b+=1;else for(b=0,c=a.length;c--;)e.push(a[b]),b+=1;return e}};Function.prototype.aspect=function(a,d,e){var b=new f.baseAspect;b.addRunner(a);b.addAspectCallback(this);
    b.addAspectParams(d);b.addAspectArgsMap(e);var c=b.run.bind(b);c.unspectObj=b;return function(){void 0==c.unspectObj.mainFunctionContext&&(c.unspectObj.mainFunctionContext=this);c.apply(c.unspectObj,Array.prototype.slice.call(arguments,0))}};g.Unspect=f})("undefined"===typeof exports?this:exports);